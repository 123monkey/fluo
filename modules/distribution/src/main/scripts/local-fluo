#! /usr/bin/env bash

# Copyright 2014 Fluo authors (see AUTHORS)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Start: Resolve Script Directory
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
   bin="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
   SOURCE="$(readlink "$SOURCE")"
   [[ $SOURCE != /* ]] && SOURCE="$bin/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
bin="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
script=$( basename "$SOURCE" )
# Stop: Resolve Script Directory

. "$bin"/impl/config.sh

APP=$2
APP_DIR=$FLUO_HOME/apps/$APP
APP_LIB_DIR=$APP_DIR/lib
APP_CONF_DIR=$APP_DIR/conf
APP_LOG_DIR=$APP_DIR/logs

function print_usage {
  echo -e "Usage: local-fluo <command> (<argument> ...)\n"
  echo -e "Possible commands:\n"
  echo "  start-oracle <app>    Starts local Fluo oracle for application"
  echo "  start-worker <app>    Starts local Fluo worker for application"
  echo "  kill-oracle <app>     Kill Fluo oracle on local machine"
  echo "  kill-worker <app>     Kill Fluo worker on local machine"
  echo " "
  exit 1
}

function validate_app {
  if [ -z "$APP" ]; then
    echo -e "The application name (set by <app>) cannot be an empty string!\n"
    print_usage
  fi
  if [[ $APP = *"-h"* ]]; then
    print_usage
  fi
}

function check_dirs {
  if [[ ! -d $APP_DIR || ! -d $APP_CONF_DIR || ! -d $APP_LIB_DIR  ]]; then
    echo "ERROR - The Fluo '$APP' application needs to be configured in apps/ with a conf/ and lib/ directory.  Use 'fluo new $APP' to create this configuration"
    exit 1
  fi
  mkdir -p $APP_LOG_DIR 2>/dev/null
}

function kill_if_running {
  validate_app
  PID=`jps -m | grep $1 | grep $APP | cut -f 1 -d ' '`
  if [ -z "$PID" ]; then
    echo "ERROR - A $1 process for the Fluo application '$APP' is not running"
  else
    kill $PID
    echo "Killed a $1 process for the Fluo '$APP' application"
  fi
}

LOGHOST=$(hostname)
LOCAL_OPTS="-config-dir $APP_CONF_DIR -log-output $APP_LOG_DIR"
LOCAL_LIB="$FLUO_LIB_DIR/*:$FLUO_LIB_DIR/logback/*"

case "$1" in
start-oracle)
  validate_app
  check_dirs
  SERVICE="oracle"
  java -Dfluo.app=$APP -cp "$LOCAL_LIB" io.fluo.cluster.main.FluoOracleMain $LOCAL_OPTS >${APP_LOG_DIR}/${SERVICE}_${LOGHOST}.out 2>${APP_LOG_DIR}/${SERVICE}_${LOGHOST}.err &
  echo "Started oracle for Fluo '$APP' application.  View its logs at $APP_LOG_DIR"
  ;;
kill-oracle)
  kill_if_running FluoOracleMain
  ;;
start-worker)
  validate_app
  check_dirs
  SERVICE="worker"
  java -Dfluo.app=$APP -cp "$LOCAL_LIB:$APP_LIB_DIR/*" io.fluo.cluster.main.FluoWorkerMain $LOCAL_OPTS >${APP_LOG_DIR}/${SERVICE}_${LOGHOST}.out 2>${APP_LOG_DIR}/${SERVICE}_${LOGHOST}.err &
  echo "Started worker for Fluo '$APP' application.  View its logs at $APP_LOG_DIR"
  ;;
kill-worker)
  kill_if_running FluoWorkerMain
  ;;
*)
  print_usage
esac
